@{
    ViewData["Title"] = "Contato";
}

<div class="page-header">
    <h1>Gerenciar Informações de Contato</h1>
</div>

<div class="contact-form-container">
    <form id="contactInfoForm">
        <div>
            <h2>Informações de Contato</h2>
            <div class="form-group">
                <label for="email">Email</label>
                <input type="email" id="email" required>
            </div>
            <div class="form-group">
                <label for="phone">Telefone</label>
                <input type="text" id="phone" required>
            </div>
            <div class="form-group">
                <label for="location">Localização</label>
                <input type="text" id="location" required>
            </div>
        </div>

        <div class="form-actions centered">
            <button type="submit" class="save-btn">Salvar Alterações</button>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var successMessage = @Html.Raw(Json.Serialize(TempData["SuccessMessage"]));
            var errorMessage = @Html.Raw(Json.Serialize(TempData["ErrorMessage"]));

            if (successMessage) {
                showNotification(successMessage, "success");
            }

            if (errorMessage) {
                showNotification(errorMessage, "error");
            }

            // Carregar dados do contato ao iniciar a página
            carregarContato();
        });

        // Função para carregar os dados de contato
        async function carregarContato() {
            try {
                const response = await fetch("/Contato/ObterContato");
                const result = await response.json();

                if (result.success && result.contato) {
                    document.getElementById("email").value = result.contato.email || "";
                    document.getElementById("phone").value = result.contato.telefone || "";
                    document.getElementById("location").value = result.contato.localizacao || "";
                }
            } catch (err) {
                console.error("Erro ao carregar contato:", err);
            }
        }

        // Lógica para salvar alterações
        document.getElementById("contactInfoForm").addEventListener("submit", async function (e) {
            e.preventDefault();

            const email = document.getElementById("email").value.trim();
            const phone = document.getElementById("phone").value.trim();
            const location = document.getElementById("location").value.trim();

            if (!email) {
                showNotification("O campo Email é obrigatório.", "error");
                return;
            }

            showLoadingOverlay();

            const contato = {
                Email: email,
                Telefone: phone,
                Localizacao: location
            };

            try {
                const response = await fetch("/Contato/AtualizarContato", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(contato)
                });

                const result = await response.json();
                hideLoadingOverlay();

                if (result.success) {
                    showNotification("Contato atualizado com sucesso!", "success");
                } else {
                    showNotification(result.message || "Erro ao atualizar contato", "error");
                }
            } catch (err) {
                hideLoadingOverlay();
                showNotification("Erro ao atualizar contato: " + err.message, "error");
            }
        });

        // Funções auxiliares
        function showLoadingOverlay() {
            const overlay = document.createElement("div");
            overlay.className = "loading-overlay";
            overlay.innerHTML = '<div class="loading-spinner"></div>';
            document.body.appendChild(overlay);
        }

        function hideLoadingOverlay() {
            const overlay = document.querySelector(".loading-overlay");
            if (overlay) {
                overlay.remove();
            }
        }

        function showNotification(message, type = "success") {
            const notification = document.createElement("div");
            notification.className = "notification-top-right";
            notification.innerText = message;
            if (type === "error") {
                notification.classList.add("notification-error");
            }
            document.body.appendChild(notification);
            setTimeout(() => notification.remove(), 5000);
        }
    </script>
}